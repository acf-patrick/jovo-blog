{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [datas, setDatas] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/blogs\").then(res => {\n      if (!res.ok) throw Error(\"Could not fetch data from that resource\");\n      return res.json();\n    }).then(data => {\n      setDatas(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n      setIsPending(false);\n    });\n  }, [url]);\n  return [datas, isPending, error];\n};\n\n_s(useFetch, \"q7pI89a5fkjsb2DSdsLHWu49alI=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/misa/Complete-React-Tutorial/dojo-blog/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","url","datas","setDatas","isPending","setIsPending","error","setError","fetch","then","res","ok","Error","json","data","catch","err","message"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AAEzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAI;AACZ,UAAI,CAACA,GAAG,CAACC,EAAT,EACC,MAAMC,KAAK,CAAC,yCAAD,CAAX;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACA,KALD,EAKGJ,IALH,CAKQK,IAAI,IAAI;AACfX,MAAAA,QAAQ,CAACW,IAAD,CAAR;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,KATD,EASGQ,KATH,CASSC,GAAG,IAAI;AACfT,MAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,KAZD;AAaA,GAdQ,EAcN,CAACJ,GAAD,CAdM,CAAT;AAgBA,SAAO,CAAEC,KAAF,EAASE,SAAT,EAAoBE,KAApB,CAAP;AACA,CAvBD;;GAAMN,Q;;AAyBN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (url) => {\n\t\n\tconst [datas, setDatas] = useState(null);\n\tconst [isPending, setIsPending] = useState(true);\n\tconst [error, setError] = useState(null);\n\n\tuseEffect(() => {\n\t\tfetch(\"http://localhost:3001/blogs\")\n\t\t.then(res => {\n\t\t\tif (!res.ok)\n\t\t\t\tthrow Error(\"Could not fetch data from that resource\");\n\t\t\treturn res.json();\n\t\t}).then(data => {\n\t\t\tsetDatas(data);\n\t\t\tsetIsPending(false);\n\t\t\tsetError(null);\n\t\t}).catch(err => {\n\t\t\tsetError(err.message);\n\t\t\tsetIsPending(false);\n\t\t})\n\t}, [url]);\n\n\treturn [ datas, isPending, error ];\n};\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}