{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [datas, setDatas] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(url, {\n      data: {},\n      method: \"P\"\n    }).then(res => {\n      if (!res.ok) throw Error(\"Could not fetch data from that resource\");\n      return res.json();\n    }).then(data => {\n      setDatas(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n      setIsPending(false);\n    });\n  }, [url]);\n  return {\n    datas,\n    setDatas,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"q7pI89a5fkjsb2DSdsLHWu49alI=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/misa/joov-tek/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","url","datas","setDatas","isPending","setIsPending","error","setError","fetch","data","method","then","res","ok","Error","json","catch","err","message"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACP,GAAD,EAAM;AACTQ,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAN,CAAL,CAIGC,IAJH,CAIQC,GAAG,IAAI;AACX,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa,MAAMC,KAAK,CAAC,yCAAD,CAAX;AACb,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,KAPH,EAQGJ,IARH,CAQQF,IAAI,IAAI;AACZN,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAZH,EAaGS,KAbH,CAaUC,GAAD,IAAS;AACdV,MAAAA,QAAQ,CAACU,GAAG,CAACC,OAAL,CAAR;AACAb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAhBH;AAiBD,GAlBQ,EAkBN,CAACJ,GAAD,CAlBM,CAAT;AAoBA,SAAO;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,SAAnB;AAA8BE,IAAAA;AAA9B,GAAP;AACD,CA1BD;;GAAMN,Q;;AA4BN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (url) => {\n  const [datas, setDatas] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(url, {\n      data: {},\n      method: \"P\"\n    })\n      .then(res => {\n        if (!res.ok) throw Error(\"Could not fetch data from that resource\");\n        return res.json();\n      })\n      .then(data => {\n        setDatas(data);\n        setIsPending(false);\n        setError(null);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setIsPending(false);\n      });\n  }, [url]);\n\n  return { datas, setDatas, isPending, error };\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}