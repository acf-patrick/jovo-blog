{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [datas, setDatas] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  setTimeout(_s(() => {\n    _s();\n\n    return useEffect(() => {\n      fetch(url).then(res => {\n        if (!res.ok) throw Error(\"Could not fetch data from that resource\");\n        return res.json();\n      }).then(data => {\n        setDatas(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        setError(err.message);\n        setIsPending(false);\n      });\n    }, [url]);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), 10 * 1000);\n  return {\n    datas,\n    setDatas,\n    isPending,\n    error\n  };\n};\n\n_s2(useFetch, \"vMF1+VcmJLy0iAuuG/9N3wMkpJY=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/misa/joov-tek/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","url","datas","setDatas","isPending","setIsPending","error","setError","setTimeout","fetch","then","res","ok","Error","json","data","catch","err","message"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAS,EAAAA,UAAU,IAAC;AAAA;;AAAA,WAAMV,SAAS,CAAC,MAAM;AAC/BW,MAAAA,KAAK,CAACR,GAAD,CAAL,CACGS,IADH,CACQC,GAAG,IAAI;AACX,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa,MAAMC,KAAK,CAAC,yCAAD,CAAX;AACb,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OAJH,EAKGJ,IALH,CAKQK,IAAI,IAAI;AACZZ,QAAAA,QAAQ,CAACY,IAAD,CAAR;AACAV,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OATH,EAUGS,KAVH,CAUUC,GAAD,IAAS;AACdV,QAAAA,QAAQ,CAACU,GAAG,CAACC,OAAL,CAAR;AACAb,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAbH;AAcD,KAfyB,EAevB,CAACJ,GAAD,CAfuB,CAAf;AAAA,GAAD,mCAeC,KAAG,IAfJ,CAAV;AAiBA,SAAO;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,SAAnB;AAA8BE,IAAAA;AAA9B,GAAP;AACD,CAvBD;;IAAMN,Q;;AAyBN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (url) => {\n  const [datas, setDatas] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  setTimeout(() => useEffect(() => {\n    fetch(url)\n      .then(res => {\n        if (!res.ok) throw Error(\"Could not fetch data from that resource\");\n        return res.json();\n      })\n      .then(data => {\n        setDatas(data);\n        setIsPending(false);\n        setError(null);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setIsPending(false);\n      });\n  }, [url]), 10*1000);\n\n  return { datas, setDatas, isPending, error };\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}